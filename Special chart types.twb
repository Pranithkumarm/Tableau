<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20231.23.0310.1044                               -->
<workbook original-version='18.1' source-build='2023.1.0 (20231.23.0310.1044)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='5' max='20' min='5' />
      </column>
      <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
        <calculation class='tableau' formula='200' />
        <range granularity='50' max='200' min='50' />
      </column>
      <column caption='Standard Deviation' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='2.2999999999999998'>
        <calculation class='tableau' formula='2.2999999999999998' />
        <range granularity='0.1' max='4.0' min='0.1' />
      </column>
    </datasource>
    <datasource inline='true' name='Sample - Superstore' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.0ozsbj20cdelf51evvdk71kugqg0'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/prani/Documents/My Tableau Repository/Datasources/2023.1/en_US-US/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
          <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
            <column datatype='integer' name='F1' ordinal='0' />
            <column datatype='string' name='Order ID' ordinal='1' />
            <column datatype='date' name='Order Date' ordinal='2' />
            <column datatype='date' name='Ship Date' ordinal='3' />
            <column datatype='string' name='Ship Mode' ordinal='4' />
            <column datatype='string' name='Customer ID' ordinal='5' />
            <column datatype='string' name='Customer Name' ordinal='6' />
            <column datatype='string' name='Segment' ordinal='7' />
            <column datatype='string' name='Country/Region' ordinal='8' />
            <column datatype='string' name='City' ordinal='9' />
            <column datatype='string' name='State/Province' ordinal='10' />
            <column datatype='string' name='Postal Code' ordinal='11' />
            <column datatype='string' name='Region' ordinal='12' />
            <column datatype='string' name='Product ID' ordinal='13' />
            <column datatype='string' name='Category' ordinal='14' />
            <column datatype='string' name='Sub-Category' ordinal='15' />
            <column datatype='string' name='Product Name' ordinal='16' />
            <column datatype='real' name='Sales' ordinal='17' />
            <column datatype='integer' name='Quantity' ordinal='18' />
            <column datatype='real' name='Discount' ordinal='19' />
            <column datatype='real' name='Profit' ordinal='20' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U10195:no:A1:U10195:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country/Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country/Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country/Region</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State/Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State/Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State/Province</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Profit Ratio' datatype='real' name='[Calculation_1368249927221915648]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Profit])/SUM([Sales])' />
      </column>
      <column caption='Calculation1' datatype='real' name='[Calculation_674132585722560518]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='-[Profit]' />
      </column>
      <column caption='Window Average' datatype='real' name='[Calculation_674132585725526023]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_AVG(sum([Sales]))'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='UCL' datatype='real' name='[Calculation_674132585727127560]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_674132585725526023]+WINDOW_STDEV(sum([Sales]))*[Parameters].[Parameter 3]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='LCL' datatype='real' name='[Calculation_674132585727787017]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Calculation_674132585725526023]-WINDOW_STDEV(sum([Sales]))*[Parameters].[Parameter 3]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='KPI' datatype='boolean' name='[Calculation_674132585728868362]' role='measure' type='nominal'>
        <calculation class='tableau' formula='SUM([Sales])&lt;[Calculation_674132585727787017]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country/Region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='string' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column aggregation='None' caption='Profit (bin)' datatype='integer' name='[Profit (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Profit]' peg='0' size-parameter='[Parameters].[Parameter 2]' />
      </column>
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[State/Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]' role='measure' type='quantitative' />
      <group name='[Top Customers by Profit]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='[Parameters].[Parameter 1]' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Profit])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[Customer Name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='Location' />
        <drill-path name='Product' />
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top Customers' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='5' max='20' min='5' />
        </column>
        <column caption='Profit Bin Size' datatype='integer' name='[Parameter 2]' param-domain-type='range' role='measure' type='quantitative' value='200'>
          <calculation class='tableau' formula='200' />
          <range granularity='50' max='200' min='50' />
        </column>
        <column caption='Standard Deviation' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='2.2999999999999998'>
          <calculation class='tableau' formula='2.2999999999999998' />
          <range granularity='0.1' max='4.0' min='0.1' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Orders' id='Orders_FC38DB8E21984BB4A6A05ACAE11A9C25'>
            <properties context=''>
              <relation connection='excel-direct.0ozsbj20cdelf51evvdk71kugqg0' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U10195:no:A1:U10195:0' header='yes' outcome='2'>
                  <column datatype='integer' name='F1' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country/Region' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State/Province' ordinal='10' />
                  <column datatype='string' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Control Chart: (Dynamic using Parameters)'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Standard Deviation' datatype='real' name='[Parameter 3]' param-domain-type='range' role='measure' type='quantitative' value='2.2999999999999998'>
              <calculation class='tableau' formula='2.2999999999999998' />
              <range granularity='0.1' max='4.0' min='0.1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Window Average' datatype='real' name='[Calculation_674132585725526023]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='WINDOW_AVG(sum([Sales]))'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='UCL' datatype='real' name='[Calculation_674132585727127560]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_674132585725526023]+WINDOW_STDEV(sum([Sales]))*[Parameters].[Parameter 3]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='LCL' datatype='real' name='[Calculation_674132585727787017]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Calculation_674132585725526023]-WINDOW_STDEV(sum([Sales]))*[Parameters].[Parameter 3]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_674132585725526023]' derivation='User' name='[usr:Calculation_674132585725526023:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_674132585727127560]' derivation='User' name='[usr:Calculation_674132585727127560:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[Sample - Superstore].[Calculation_674132585725526023]' ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_674132585727787017]' derivation='User' name='[usr:Calculation_674132585727787017:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
              <table-calc field='[Sample - Superstore].[Calculation_674132585725526023]' ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='1' field='[Sample - Superstore].[sum:Sales:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[Sample - Superstore].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='fill-above' id='refline1' value='#00000000' />
            <format attr='fill-below' id='refline1' value='#00000000' />
            <format attr='fill-above' id='refline2' value='#00000000' />
            <format attr='fill-below' id='refline2' value='#00000000' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[usr:Calculation_674132585725526023:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727787017:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727127560:qk]' />
            </encodings>
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-pane' value-column='[Sample - Superstore].[usr:Calculation_674132585725526023:qk]' z-order='1' />
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[Sample - Superstore].[usr:Calculation_674132585727787017:qk]' z-order='2' />
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-pane' value-column='[Sample - Superstore].[usr:Calculation_674132585727127560:qk]' z-order='3' />
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[Sample - Superstore].[usr:Calculation_674132585725526023:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727787017:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727127560:qk]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585725526023:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727787017:qk]' />
              <lod column='[Sample - Superstore].[usr:Calculation_674132585727127560:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</rows>
        <cols>[Sample - Superstore].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{E3B90CBA-D1A5-4A06-B2E0-364FD4D4C878}' />
    </worksheet>
    <worksheet name='Control Chart: (Static)'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Month-Trunc' name='[tmn:Order Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-orientation' field='[Sample - Superstore].[tmn:Order Date:qk]' value='-90' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#00000000' />
            <format attr='fill-below' id='refline0' value='#00000000' />
            <format attr='line-visibility' id='refline0' value='on' />
            <format attr='line-pattern-only' id='refline0' value='dotted' />
            <format attr='stroke-size' id='refline0' value='2' />
            <format attr='stroke-color' id='refline0' value='#8cd17d' />
          </style-rule>
          <style-rule element='refband'>
            <format attr='reverse-palette' id='refline1' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[Sample - Superstore].[sum:Sales:qk]' z-order='1' />
            <reference-line axis-column='[Sample - Superstore].[sum:Sales:qk]' enable-instant-analytics='true' fill-above='false' fill-below='false' formula='stdev' id='refline1' label-type='automatic' scope='per-pane' symmetric='false' type='sample' value-column='[Sample - Superstore].[sum:Sales:qk]' z-order='2'>
              <reference-line-value factor='-3' />
              <reference-line-value factor='3' />
            </reference-line>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[sum:Sales:qk]</rows>
        <cols>[Sample - Superstore].[tmn:Order Date:qk]</cols>
      </table>
      <simple-id uuid='{5F2585F2-2108-4419-8686-FE8B202C1A72}' />
    </worksheet>
    <worksheet name='Pareto 1'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[Sample - Superstore].[none:Sub-Category:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[Sample - Superstore].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[Sample - Superstore].[sum:Sales:qk]' x-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[none:Sub-Category:nk]</rows>
        <cols>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[sum:Sales:qk])</cols>
      </table>
      <simple-id uuid='{C1CCD430-1E66-47D3-AE29-EE1ED67CD4ED}' />
    </worksheet>
    <worksheet name='Pareto 2'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[pcto:cum:sum:Sales:qk:6]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[Sample - Superstore].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[Sample - Superstore].[none:Sub-Category:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[Sample - Superstore].[sum:Sales:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[Sample - Superstore].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[Sample - Superstore].[pcto:cum:sum:Sales:qk:6]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[sum:Sales:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[Sample - Superstore].[pcto:cum:sum:Sales:qk:6]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([Sample - Superstore].[sum:Sales:qk] + [Sample - Superstore].[pcto:cum:sum:Sales:qk:6])</rows>
        <cols>[Sample - Superstore].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{38485973-4342-4DE6-9324-7A8E6A35901B}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{272FD5D6-5F05-4FDC-9B31-8B9C1075F054}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{484E8A45-F74F-4343-B137-DEEBCF3F533C}' />
    </worksheet>
    <worksheet name='Waterfall Chart'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column caption='Calculation1' datatype='real' name='[Calculation_674132585722560518]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='-[Profit]' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[cum:sum:Profit:qk]' pivot='key' type='quantitative'>
              <table-calc aggregation='Sum' ordering-type='Rows' type='CumTotal' />
            </column-instance>
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_674132585722560518]' derivation='Sum' name='[sum:Calculation_674132585722560518:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[Sample - Superstore].[sum:Profit:qk]' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <size column='[Sample - Superstore].[sum:Calculation_674132585722560518:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[Sample - Superstore].[cum:sum:Profit:qk]</rows>
        <cols>[Sample - Superstore].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{1404E7DE-EFEC-4212-BDD1-81A3CAA57DE5}' />
    </worksheet>
    <worksheet name='WordCloud'>
      <table>
        <view>
          <datasources>
            <datasource name='Sample - Superstore' />
          </datasources>
          <datasource-dependencies datasource='Sample - Superstore'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <_.fcp.ObjectModelTableType.false...column caption='Orders' datatype='integer' name='[__tableau_internal_object_id__].[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]' role='measure' type='quantitative' />
            <column caption='Sub-Category1' datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <_.fcp.ObjectModelTableType.true...column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[Orders_FC38DB8E21984BB4A6A05ACAE11A9C25]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Orders_FC38DB8E21984BB4A6A05ACAE11A9C25:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[Sample - Superstore].[sum:Profit:qk]' />
              <size column='[Sample - Superstore].[__tableau_internal_object_id__].[cnt:Orders_FC38DB8E21984BB4A6A05ACAE11A9C25:qk]' />
              <text column='[Sample - Superstore].[none:Sub-Category:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{47F6B181-0025-49CE-B5C5-D0F07CE59270}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' maximized='true' name='Pareto 1'>
      <cards>
        <edge name='left'>
          <strip size='226'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[Multiple Values]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAB4DE7E-F624-4B77-827B-3C2152761C28}' />
    </window>
    <window class='worksheet' name='Pareto 2'>
      <cards>
        <edge name='left'>
          <strip size='224'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Sample - Superstore].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[Multiple Values]</field>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{D7B3E3D3-FEBC-490D-B81D-682799DE5D7A}' />
    </window>
    <window class='worksheet' name='WordCloud'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A8EFA314-E26E-407D-90E6-8531F045784D}' />
    </window>
    <window class='worksheet' name='Waterfall Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{E0A2091C-7B29-4A3F-8394-C1B80A76AEBA}' />
    </window>
    <window class='worksheet' name='Control Chart: (Static)'>
      <cards>
        <edge name='left'>
          <strip size='236'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[Sample - Superstore].[tmn:Order Date:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5C647E4B-3AE5-4F0C-ADE0-312730C3489C}' />
    </window>
    <window class='worksheet' name='Control Chart: (Dynamic using Parameters)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[Sample - Superstore].[sum:Profit:qk]' type='color' />
            <card mode='slider' param='[Parameters].[Parameter 3]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[Sample - Superstore].[sum:Profit:qk]</field>
            <field>[Sample - Superstore].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6743526E-25A3-4E14-A890-CA3DD16A6327}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D0D1480E-22A5-445F-B6F0-E3B101C2FBAF}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{EB87FB7E-CAC4-433E-AF7B-4D5BD1618BCB}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='240' name='Control Chart: (Dynamic using Parameters)' width='240'>
      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
      4neO/AljsSGqHB6aq1pLXlMudafM97NEIhFsNlsuPWs+2O12nnvuOSLuBX4T/jlE4IPxt/mj
      E/8thwJH876OaZrcuXMHh8PBqVOnSvr8Tnn5ssppK92Pe6l320b9ablvFmKBhj06AltxtBtR
      XeMnmFxAMzb2SlJVlVu3bnHixImCPbeskchVrfDnn/9LbvIhSW+0oFFIsSkcDhynxbN/2Zq7
      WJY64OdLOBymurq64NhZWZYJueZzFmrd1Omdv5fXuaZpMBYf5vOJD+kf7aO7u7vo9DcW5+sv
      s9/bgVNWaK5q43Jj6VtdVhG6zbyxIpFILqCiEPbcCJxP1YOF9ByfG+8y3zHLjwb+Ld/t/H1c
      9tUjo2ma3L9/H8MwOHfuXFFvf4fTQaRthpmFRYPWx7F3OBe/QIuvreBrlYNCKwostUAXwz5P
      Cw8X7n9xMXBmXHlFgj0I3uVXo3+DburYjzqpbinswV8Ll72K3+r4IxJaHLfdg6MMziYulyuX
      aXQjw2k0GsXlchUcvbXnRuB8ci5/MvUuc5lpTJvBcGyAu/PX1zwuGo3S29vL+fPniw6b0w2d
      ydiXxpKsoTKTmCrqWuVAUZS8kglYrPSBLpTnW17mhZavss/Txkn3eSauzzI2NrbpLOTe/I2c
      xV2TVZ5EHxZ1/5XYZDt+Z6As4oVFARuGsak7pbWPXnANplIaV4ls5AdtoepLciOb8Gign5GR
      EXRdxzRNDNMgq2e5dfsWHo+Hrq6uotdedtlOV8Pp3M8+p5/26s4Nzni2FJoO1TK+5JO2Zi0U
      m8LrHd/mH537p/zOhT/iyKEjvPfeext6wqmqihYzWGKAJ+DcPO/VduBwOJAkaUMBF7uFBHtw
      Cp3PCPxc80uMxYdJ6yn8SoCGaBtvvfUW1dXVHDrZyaDSy2xyCiNr45uXf7skn1lJkvjO0d+h
      xdtGJBPmQvNlatx1RV+vVAp1p1RVNVdJr1QkSeKFF14gkUjw9ttv881vfnPVmjCVSvHrX/8a
      Kemm/fwRgtk5umrOcLz29DpX3V6sBIUbbSUZhkE8Hi8qjdOeErBVLmOzEbjN2873T/1Tgul5
      Gt37cNqcRLsXp8ufzL1DqvqL/MENEPMGgY6S2mWX7Tzfll/EzLNmraqHG2EZX8ohYOv+165d
      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
      QFDB/P/Y+ZDi1K8QFgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Control Chart: (Static)' width='240'>
      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
      jcYJcQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Pareto 1' width='240'>
      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
    </thumbnail>
    <thumbnail height='240' name='Pareto 2' width='240'>
      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
      gg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 6' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC0UlEQVR4nO3TQQ0AIBDAMMC/58MDH7KkVbDP9szMApLO7wDgnYEhzMAQZmAIMzCEGRjC
      DAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMAND
      mIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZg
      CDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIM
      DGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OY
      gSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAI
      MzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwM
      YQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iB
      IczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgz
      MIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxh
      BoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEh
      zMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMw
      hBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEG
      hjADQ5iBIczAEGZgCDMwhBkYwgwMYRfMRAXcQni19AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Sheet 7' width='240'>
      iVBORw0KGgoAAAANSUhEUgAAAPAAAADwCAYAAAA+VemSAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAC0UlEQVR4nO3TQQ0AIBDAMMC/58MDH7KkVbDP9szMApLO7wDgnYEhzMAQZmAIMzCEGRjC
      DAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMAND
      mIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZg
      CDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIM
      DGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OY
      gSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAI
      MzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwM
      YQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iB
      IczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgz
      MIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxh
      BoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMwhBkYwgwMYQaGMANDmIEh
      zMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEGhjADQ5iBIczAEGZgCDMw
      hBkYwgwMYQaGMANDmIEhzMAQZmAIMzCEGRjCDAxhBoYwA0OYgSHMwBBmYAgzMIQZGMIMDGEG
      hjADQ5iBIczAEGZgCDMwhBkYwgwMYRfMRAXcQni19AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='Waterfall Chart' width='240'>
      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
      07RDvZ6ffzG+fxVIJ2rl9di2jWEYhy7Lk3as1MzSKodx2DcSjnKJ09ooy5P2euBoyvKkvZ5j
      r4E/jlXJMruYpJRZpaLHuHh2mKrfOttmZnqaoFdhYTPJ+YuXqfNVXystTE4Q6x0iqmS5FU9y
      6XR/1fvALjE1vQaVBMmyh6uXzlb/eoCl2Sl8IT+zcysMnX2Kloi36n0UUltspk0Sm4vo4TbO
      DvdVXxDbYGpqHq9SYi1V4tpTl9AcHNyb89No0QiT47N0jVygr6Wu+qKYOabje1Ry65S1CBfP
      jTh6b2enpgj4VBbW9zh38TJhf/V1XHJ9kbzqZ2UuTrRjkOHe1uoL8s6xolSS7JU0nr587kNf
      T033xLKtEpurc1i+VoxCBqffNJnkDktbaZrCXoplo/odmAVmZ2cYu3WDt+/M0tXZ4qwgVoWd
      jRUyZgjNKGI52wvZdIqZuXV6OxtIZQ9+3eD9jEqR5YU4wYZOCtm0s4LYFsndLTYzFkHFwnT4
      AeWyWSbGZxge6SSRyjssSpnN1XkMXzNm8TDHyi6LG0laYn7yJQfHClAqFojPzNLa1Ukmk3VW
      EMtgZ3OFtBlAN0sfeazUdA1s2zapxA6+uihWxSAUCjraT7mQJVuy8XsU/MEQqoNaYndtBU9D
      KxH/Ic5ZLIOd3SThWAzbNPH7fftv8yGMcoFkpkRdwIPuD6Kr1b8eo1wkmc4Tq49iGiY+X/W1
      OLZFYm8PX10U1Tbx+XyOmpeWWWFnL00sHADdj1evvl6xrQrbO0nqGxsxKxXH721qd5NMycaj
      KURiDQR81X/etmWSzuQIhQJYtoLX4+xMNZtOYOsBVNskFAp96GNquwY280yN3+Z+fIfZeNzZ
      t6ptE5+e5O69STbWFkkXnH2r+nw219/4GQuLiyTSzmoJMInPzlGpGCiq6riWWJ2b4ebte6T3
      VlnbKzraR6WYZmFlE6NioGpODwOL+dk45YqBojg/lHaX4lx/6w6F3DbxdaetgTKzs4sYlTKq
      5vy9nZmaplDIEZ+6x42332InW65q+3x6l+mZWTY21onH50hkHB4rdpmpe3eYmF4mPhv/yBq4
      tgNslPD4/OTSCTI5Z01FgLKpoFllkskUlsNP1lfXyIUzJ/HqKsY7t8CqpxAO6kzev098fsXx
      QVYsm/h0m0QyienwBWkeP2oly/TMNGtbCYclUYjFgkxNTDA5M4/TdyWXLxEKeEgkE1QMpycW
      KgHd5P7kFAvLmw73AbquE2toIhKuIxYJUayyGR2MNHKit4NMKkNDYz2W0wPOMkD1Us5nSGVy
      H11eZ3t/9GzbQvHG6OnpY2M3TXf/Wcf76u5qZ2cvDbqfSKD6l2yZBlvrq2xub7Odtrh0ud5Z
      QRSFcjGLHejEquQdXWQB6B0cgMUldrIm15oDVW+fSycomzZ1kQg2oDu+1aRQLBQw1SAepeL8
      9YyextSmKNp1nOlz+t6qmOUMeqSLcj7lsCRw9sJ55uYXibT10xIL4fFVf9q2trgIukq5UmF1
      K0V7k4NF5LUgwydPsLi6SXPn0Ee+tzVbA5vlHMlUhky+TCDgJ5PJON5XfH6FE8MjeIw0e5nq
      a/LN+QnG59Zp6+ygoamD5lj1V0kBMEsYig/MCqlkyvFFrOn703g0m2gQ4mvVvy+hSD319Q0M
      Dg7Q399Pa6ODAwzANshXVDyKSSqRdHwRa2t+mp28QW5nmdWEs1MC28iheINUSiWSKecXsSYn
      xskXyyS2t7A0L07OLtp7e7GKOWZn5+np6XBWEKvAvfuzGKbJ1ubWR76emq2BdV+YqJIilYkw
      2NPsfEcKdLfVc/PmDVTdT1e4+osb7SfO0T5os740i1nYZXmznu5WBzWFXsdQfxczi+ucOH0O
      p/VeS2OY+T2DofYQVrj6Ghggu7PM62+NoYUa8QXCPPfUmep3ono5dbKP+zPzdJ04hcfBxTSA
      XDZPa/cAUWObu/ElmkMD+Ku8eKR66unt6mB+dZfTFy44rpnKFYvuwR50VXV0Me0BG83jI+TV
      8XmdRkzFQqO3txdF1d1XAwMois7k7TcYuzvO3NK6429VzePFp+toqoJhOqz3FIX23iGuPf00
      XS2x6rc3i9y5+SavXR8HbMZujTmugSONLTRFfCQLCnVehw1XRaG9uw+/iqNaBqvC9s4eiVSG
      cCRKIZfBcnhDo7mnh9X7Y9ydT9IW0xzdvrHNHDPxNVTFZn1tw/Gx0tnZQXJvl53dBIbDJsXG
      wiKtQ2e4eLqP+Nyyw5JodLQ1srOzw14y7b4aGEDR/AwOdLObzdLQ0ulsJzYsr269+62sO/5W
      /XmhFGfnepqfc+fPkKvMc+nyad6+/pbjg2x2cpZ02aCrNcRmukx/c/UfY6ihgx41SCqcJhht
      rL4Qik5jQ4ztQoJ0Ok2sudNxbZDaWKOx/xSh3ArZQBMNESetCgvFV8fwyACq5uBWn22zs7v3
      zn9tcPjpZHbXWdtNkN8ZY8MLgabe6ndiFtjcK2DbFqZpwcdUOjVdA5vlXRKlOp5+6jIr8zPO
      a2BK3Lk9xtjd+xQqTq+VHgEtxFB3mLHbY7T2nnDchG5oitHeEmNlM4Pf4+wjzOysMD2/ho2C
      ZTloCygKKhUW1tJcvnyZ1MYSFacfkKqBWcFEdX5AKl5CXpP5hQXWNncc7aK+PobX66FSKlEs
      lXDSRSLc2M6Vp68xPNBLR3cfXS0OTrW0AK3NMfw+D6ZhvDvw58PUdIBVTxS1vM3YnTvU1bc4
      vsrZ3NyGjY2qHM2oGMdsg7WNHSzTJLmXcNyEtiyFjoERzg514aQ9UCnm2Nreo1ByfmsOAEXD
      Lie5ceMGO4kEY7fvUXZwitJ58jRNAY1AUx8nOx1eUMMin9qmosbIp/eq31xR0DSN2fgiPQMD
      DA704tOdfcVuzM8wPTvL7u4Ocae3tIwc86tp+vr76elq+8hPubab0KqHU+cuUMwmsH1RxwFe
      3UygKhAJKORKJgHP4UboOGaVKdsBzp8/6bwpzoPbQHoqQ3lvF5ocdOtUFOoa2hltVsG2HfVM
      e7AfnXPnzxFfWOHcU8/Q1hCl2l2ldjfY2Pn5bZ80Hp+fBicX5qwymi9ALp1CsRxcybZtFmYm
      2EskuHdvAk3zMnr6FCFf9REJhoK0tXvYWl8n0ubkekmJu+MzJPc2mZgo4/FHOXvmw28laV//
      +te/Xv0zPB5mcYuJeILk3i6721t0dHVWf9AroKoQCehspsp0dbbj0Y6vFt7aWGFnd49kpkRT
      U72jEEdiUZLbm6iBBlob6vBUWVMkNxbJEqarrZGgT+feZJzODgcd7q0yb924x7mLF5i4fYv2
      7u6qBzP4g3VEAxrxxS0Gepsx9TqCXgdfsKqXoN+HbVcYPHkSn/ejr9x+KEUh1thCZ1cXnW3N
      qLqX+midoxabP1xPU2MjvZ0tpFIFmhqqbFWoOq2tTWhagNOnR8hn09TXf/ixUtNNaM0Xg8wK
      rX1DNDQ2OBiJZJFMpvGoNgVTpamxHk05pq7fZp7N3SzRaAy/34/PQR/bn0vtbJLJl1hbXcF0
      8BEG6upYWZijVDHYXJ5D8Tu8r61ohLxwb/wuFcWL0+/F2fuzKKqNx2MSX9x2tA+7sMHCjsLI
      yDAzE+OOr5fcuzvO7PQUO5srbKWqP8UoZJPMz80xNzfH3Pw8WwmH/ResCusbO1i2xdbGpksH
      M1gVtnbSlLI7GJ4oA91tVe7AplSuoKnKO7c4FHSP7rzJeEjZ5C6GHqSc2kILN9MYqb6Xz8ZS
      nM1ElqW5Odr7TzA0NEw0VP1AhGI2weT0HJGWLvq7Wh20BGwSiST19fVYlkkqmSJWX++oxiqm
      tnn9Z2PowQBnLz5NfbDKZqttER9/g7uLJTpbwzR3DtDX4eDKOrAwdYfdsp/WsEK0bYCwv7rW
      QKVUIJPNv/sF4g/WEQo4G1iR3t1gdnGdnsFhmqIffqzU9DmwWdpldT2FbRlYxgp93W1V1zd7
      W6uk8+90SFd0egf68Du8OHEoZpabt2cIeQr4Ok6SuXeXp595uurX09zZS2ObQSwcwlPXQDjo
      rCb319Vz4dJlR9sCYBaYia9y9Uo9qqqyODdH8NJlfA6+GwvFAg2trbS0dRILOMcvqa8AAAUh
      SURBVPhsFJWBM1cJt6YxCgnKtoM7DbbN9s4uwXCMcrZI3tBoclAUjy9Ag89Z55qHy2OwvLhI
      vghzs3EaLp/90GOlpgOs+ZvxW0s0DZymlE45OP99p7PC1irzy5uE6lvwHnKKGceMPJYniM9v
      YxsmVtnAAKqtOzVNZ/buLfxt/WTWpjG08/Q0HsEBUy3VT0jNMX5/Cp9qkbU0nPYpibV0o2ge
      7o5dJzV0ldGe6mtPu5xgaSWBQhnLSNDT2VL1l2NjYwOWGUbRU1ioaA57lh0JM0/O0PF6/WhW
      wZ0dOWwjTzqdpLCaQitv09XtoF+pDbNzq1y8epX5idvsZVtoctCd8tA8MQY681h2GBSL6OCg
      4zdfVTXMShlb1Y7vIoaicuriU2TTKSqWwsBQ1PEtusTmMltZi0vPvkjQ4ThexdtISF2isW+U
      Uibp6MteVRTG3r5BfWsniqI57ll2aLaNqQTp7e2imN4lbTV+5Odc2wG2TDw+H+m9bTy6s3G8
      ALpS4tbNG2RTe2zl7uE/f5a6wwzMd0L10tPXdyS7Gjx1hvl4nGBzP53HUfu+Q1FUwlGHo4fe
      zzLJppLcT+7QPThKa/2HD17/+H0U2dvbZTV5h2AwSFe3s557tmViWjbHcZb1LiPD333zu0Sb
      W4mGQ3gCXh5cwflFNR1g1ROmuaWTehS8QYc3+BUYHj3N9Owig6cu093WWPW9ylqzOD1BQa8j
      szyNNxShzcGcWLUkuZOgd/QMMY+Cqjk7JG2ziC/aimpoKHbxIw/4/fQPDWNYCijqsV3sxBPh
      iy/9ChubW2SyuY/t8FPTt5HM0jZbGZ3+/gHWluYdzsgBd8enOH3+ApmNOIl8dTMs1KJCsUJ7
      RyfN9UHyBfcvVVPfUs/8xDgTExPspQtVb28ZRfJGmBP9PQx0Rxk8OeL4wF5ZWMBbF6WhPuZo
      qqIjYdugPBhrbdkKdXVBd45G0vwthJRdbt26QUtnv+PCKkae27dusr65zfidu2SL7j3ojXKB
      cFMrK/ffZnzdoL/VQXOzhizMzFLX2kNjQwPnRntJJqufgqaS3WJuNcnG4iLBlk6a68OOyxOL
      Bblz4wZ3jrPfvJnl23/3MjupHOVyiUw6586LWFY5haE3celcN2O372F3Njm6OHH1hc9imxUW
      FpZo6+k7vq6UR2D85k3qmhrZLHg51+khvp7lRLvDjhg1IJ1M0W7b7O0lGegIkMxU30JSNA+b
      S9NQzpCybKKxZoYHux01oQOhGJ0dQQr50vE1ofUwX/7K7x3soY+4KIeiqB5SOyvMzhQp2Q7q
      X9tmfXmerb0k68urDF99Dv9hhxMes7Jh4ffpKIZFvmxQUkuAewPc0BDizs3bFAtFbtydp7lr
      pOp9eOraePHT7/UJP8yAlYaWDuptm6XpcdIFA3+Nf9nXdIBVPcTVpy+TTiXw1zkpqk0qlcCw
      dULBEAG//3hHIx2Bk6PD5IoVRk52oyqKs/mWakjX4Ahdh9yH8s5IoqOwvb5EMlsiV7BocTCQ
      4XGr2a6UllFmZWmRnWSa9Y1dnnnuWeojdY6aRZZlkNzdYXV9h8GREYKOpzkRTyzbYmo6zsmB
      VubXywz0NB13iQ6kZo9ks5xlfnGNpo5OwuES0XDI8fA7VdVpaG6jobnKvtTiEyWxt0u2ycPq
      RpHmBj/BYOh4e2MdQM3WwADYNsVcmsXlZSxPhJETPY5DLMTHsm2WF2bJlwwqpo3H46O3v6/m
      z4FrO8BCiI/l7kuyQnzC/X8E/y7gyUNxxgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='240' name='WordCloud' width='240'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
